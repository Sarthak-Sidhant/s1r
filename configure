#!/bin/bash

# Check dependencies and show install command if any are missing

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BOLD='\033[1m'
RESET='\033[0m'

# Function to check if a command exists
command_exists() {
    command -v "$1" &> /dev/null
}

# Required commands and their packages
declare -A DEPS=(
    ["curl"]="curl"
    ["wget"]="wget"
    ["unzip"]="unzip"
    ["tar"]="tar"
    ["file"]="file"
    ["numfmt"]="coreutils"
    ["nproc"]="coreutils"
    ["pdfseparate"]="poppler-utils"
    ["pdfinfo"]="poppler-utils"
    ["pdfimages"]="poppler-utils"
    ["pdftocairo"]="poppler-utils"
    ["convert"]="imagemagick"
    ["pngquant"]="pngquant"
    ["optipng"]="optipng"
    ["parallel"]="parallel"
    ["tesseract"]="tesseract-ocr"
    ["python3"]="python3"
    ["bc"]="bc"
)

# Optional OCR packages (shown as additional install)
OCR_PACKAGES="tesseract-ocr-hin"

# Check what's missing
MISSING_PACKAGES=()
for cmd in "${!DEPS[@]}"; do
    if ! command_exists "$cmd"; then
        MISSING_PACKAGES+=("${DEPS[$cmd]}")
    fi
done

# Get unique packages
UNIQUE_PACKAGES=($(printf "%s\n" "${MISSING_PACKAGES[@]}" | sort -u))

# If nothing missing, we're good
if [ ${#UNIQUE_PACKAGES[@]} -eq 0 ]; then
    echo -e "${GREEN}âœ“ All dependencies installed${RESET}"
    exit 0
fi

# Detect OS
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
    OS_FAMILY=$ID_LIKE
else
    OS="unknown"
fi

# Show install command based on OS
echo -e "${YELLOW}Missing dependencies. Run:${RESET}"
echo ""

if [[ "$OS" == "ubuntu" ]] || [[ "$OS" == "debian" ]] || [[ "$OS_FAMILY" == *"debian"* ]]; then
    echo -n "sudo apt-get update && sudo apt-get install -y"
    for pkg in "${UNIQUE_PACKAGES[@]}"; do
        echo -n " $pkg"
    done
    echo -n " $OCR_PACKAGES"
    echo ""
    
elif [[ "$OS" == "centos" ]] || [[ "$OS" == "rhel" ]] || [[ "$OS" == "fedora" ]] || [[ "$OS_FAMILY" == *"rhel"* ]]; then
    echo -n "sudo yum install -y epel-release && sudo yum install -y"
    for pkg in "${UNIQUE_PACKAGES[@]}"; do
        if [ "$pkg" = "imagemagick" ]; then
            echo -n " ImageMagick"
        else
            echo -n " $pkg"
        fi
    done
    echo ""
    
elif [[ "$OS" == "arch" ]] || [[ "$OS_FAMILY" == *"arch"* ]]; then
    echo -n "sudo pacman -S"
    for pkg in "${UNIQUE_PACKAGES[@]}"; do
        echo -n " $pkg"
    done
    echo ""
    
else
    # Generic list
    echo "Install these packages:"
    for pkg in "${UNIQUE_PACKAGES[@]}"; do
        echo "  - $pkg"
    done
fi

exit 1